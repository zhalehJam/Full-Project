// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(TicketingDbContext))]
    [Migration("20230613121647_AddPersonRole")]
    partial class AddPersonRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TicketContext.Domain.Centers.Center", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("CenterID")
                        .HasColumnType("Int");

                    b.Property<string>("CenterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Center", "TicketContext");
                });

            modelBuilder.Entity("TicketContext.Domain.Persons.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PartId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("PersonID")
                        .HasColumnType("Int");

                    b.Property<int>("PersonRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Person", "TicketContext");
                });

            modelBuilder.Entity("TicketContext.Domain.Programs.Program", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ProgramLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Program", "TicketContext");
                });

            modelBuilder.Entity("TicketContext.Domain.Tickets.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ErrorDiscription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ErrorType")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonPartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SolutionDiscription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupporterPersonID")
                        .HasColumnType("int");

                    b.Property<int>("TicketCondition")
                        .HasColumnType("int");

                    b.Property<DateTime>("TicketTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ticket", "TicketContext");
                });

            modelBuilder.Entity("TicketContext.Domain.Centers.Center", b =>
                {
                    b.OwnsMany("TicketContext.Domain.Centers.Part", "Parts", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<Guid>("Center")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<int>("PartID")
                                .HasColumnType("Int");

                            b1.Property<string>("PartName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("Center");

                            b1.ToTable("Part", "TicketContext");

                            b1.WithOwner()
                                .HasForeignKey("Center");
                        });

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("TicketContext.Domain.Programs.Program", b =>
                {
                    b.OwnsMany("TicketContext.Domain.Programs.ProgramSupporter", "ProgramSupporters", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<Guid>("Program")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<int>("SupporterPersonID")
                                .HasColumnType("Int");

                            b1.HasKey("Id");

                            b1.HasIndex("Program");

                            b1.ToTable("ProgramSupporter", "TicketContext");

                            b1.WithOwner()
                                .HasForeignKey("Program");
                        });

                    b.Navigation("ProgramSupporters");
                });
#pragma warning restore 612, 618
        }
    }
}
